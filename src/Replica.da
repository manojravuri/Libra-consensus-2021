import pdb;pdb.set_trace()
from Main import Main as main_module
#main_module = import_da('Main')
import sys, os
class Replica(process):
    def setup(replica_id,validators,f,number_of_requests):
        self.main = main_module.Main(replica_id)
        self.validators = validators
        self.f = f
        self.number_of_requests = number_of_requests
        print(self.main)

    def run():
        #while(number_of_requests>0 ):
            #while(sync()):
        if(self.main.current_leader()):
          p=self.main.process_new_round_event(None)
          #broadcast(p)

def main():
    #number_of_procs = int(sys.argv[1]) if len(sys.argv) > 1 else 10
    #number_of_reqs = int(sys.argv[2]) if len(sys.argv) > 1 else 10
    import pdb;pdb.set_trace()
    number_of_procs = 10
    number_of_reqs = 10
    f=(number_of_procs-1)/3
    ps = new(Replica, num= number_of_procs)
    i=0
    for p in ps:
        #main=Main()
        setup(p, (i,ps-{p},f,number_of_reqs))
        #setup(p, (1, 2, 3, 4))
        i=i+1

    start(ps)
